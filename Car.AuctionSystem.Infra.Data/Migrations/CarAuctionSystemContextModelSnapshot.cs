// <auto-generated />
using System;
using Car.AuctionSystem.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Car.AuctionSystem.Infra.Data.Migrations
{
    [DbContext(typeof(CarAuctionSystemContext))]
    partial class CarAuctionSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Bid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bidder")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PlacedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("StartingBid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<int>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Hatchback", b =>
                {
                    b.HasBaseType("Car.AuctionSystem.Domain.Entities.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.ToTable("Vehicles", t =>
                        {
                            t.Property("NumberOfDoors")
                                .HasColumnName("Hatchback_NumberOfDoors");
                        });

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Sedan", b =>
                {
                    b.HasBaseType("Car.AuctionSystem.Domain.Entities.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Suv", b =>
                {
                    b.HasBaseType("Car.AuctionSystem.Domain.Entities.Vehicle");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Truck", b =>
                {
                    b.HasBaseType("Car.AuctionSystem.Domain.Entities.Vehicle");

                    b.Property<double>("LoadCapacity")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Auction", b =>
                {
                    b.HasOne("Car.AuctionSystem.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Auctions")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Bid", b =>
                {
                    b.HasOne("Car.AuctionSystem.Domain.Entities.Auction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Auction", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("Car.AuctionSystem.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Auctions");
                });
#pragma warning restore 612, 618
        }
    }
}
